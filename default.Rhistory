version
library(ggplot2)
library(swirl)
exit
swirl()
swirl()
swirl()
library(UsingR)
install.packages("UsingR")
install.packages("UsingR")
library(UsingR)
?instal
?library
hist(galton$child,col="Blue")
hist(galton$child,col="Blue",break=100)
hist(galton$child,col="Blue",breaks=100)
hist(galton$parent,col="blue",breaks=100)
par(mfrow=c(1,2))
hist(galton$child,col="blue",breaks=100)
hist(galton$parent,col="blue",breaks=100)
?hist
hist(galton$child,col="blue",breaks=100)
hist(galton$child,col="blue",breaks=50)
hist(galton$child,col="blue",breaks=10)
hist(galton$child,col="blue",breaks=40)
hist(galton$child,col="blue")
install.packages("manipulate")
?lines
lines(1,2)
lines(1,20)
myHist <- function(mu)
{
hist(galton$child,col="blue",breaks=100)
lines(c(mu, mu), c(0, 150),col="red",lwd=5)
mse <- mean((galton$child - mu)^2)
text(63, 150, paste("mu = ", mu))
text(63, 140, paste("MSE = ", round(mse, 2)))
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
library(manipulate)
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
?par
par(mfrow=c(1,2))
par(mfrow=c(1,1))
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
?lines
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
View(galton)
View(melt(galton))
library(reshape2)
View(melt(galton))
ggplot(galton,aes(x=parent, y=child)) + geom_point(col="Red")
ggplot(galton, aes(x = parent, y = child)) + geom_point()
library(dplyr)
install.packages(dplyr)
install.packages("dplyr")
table(galton$child, galton$parent)
freqData <- as.data.frame(table(galton$child, galton$parent))
View(freqData)
names(freqData) <- c("child", "parent", "freq")
class(freqData$child)
as.numeric(freqData$child)
?scale_size
freqData$child <- as.numeric(as.character(freqData$child))
freqData$parent <- as.numeric(as.character(freqData$parent))
g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))
temp =filter(freqData, freq > 0)
names(freqData)
?filter
temp =filter(freqData,freq > 0)
rm(list = ls())
freqData <- as.data.frame(table(galton$child, galton$parent))
temp =filter(freqData,freq > 0)
temp =filter(freqData,Freq > 0)
library(dplyr)
?filter
names(freqData) <- c("child", "parent", "freq")
freqData$child <- as.numeric(as.character(freqData$child))
freqData$parent <- as.numeric(as.character(freqData$parent))
g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))
temp =filter(freqData,Freq > 0)
temp=filter(freqData,freq > 0)
g+geom_point()
g  + scale_size(range = c(2, 20), guide = "none" )
g+geom_point()
g  + scale_size(range = c(2, 20), guide = "none" )+geom_point()
g  + scale_size(range = c(2, 20), guide = "none" )+geom_point()
?scale_size
g  + scale_size(range = c(2, 20), guide = "none" )+geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))
g  + scale_size(range = c(2, 20), guide = "none" ) + geom_point(aes(colour=freq, size = freq))
g  + scale_size(range = c(2, 20), guide = "none" ) + geom_point(aes(colour=freq, size = freq)) + scale_colour_gradient(low = "lightblue", high="white")
g  + scale_size(range = c(2, 20), guide = "none" ) + scale_size(range = c(2, 20), guide = "none" ) + geom_point(aes(colour=freq, size = freq)) + scale_colour_gradient(low = "lightblue", high="white")
g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))
g <- g  + scale_size(range = c(2, 20), guide = "none" )
g
g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))
g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))
g <- g + geom_point(aes(colour=freq, size = freq))
g <- g + scale_colour_gradient(low = "lightblue", high="white")
g
g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))
g <- g  + scale_size(range = c(2, 20), guide = "none" )
g
g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))
g
g <- g + geom_point(aes(colour=freq, size = freq))
g
?scale_color_gradient
?aes
g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))
g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))
g
g <- g  + scale_size(range = c(2, 20), guide = "none" )
g
?scale_size
g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))
g
?aes
setwd("C:/Users/agup105/Desktop/R/R/Regression Model")
ls()
library(myplot.R)
library("myplot.R")
ls()
list.dirs()
file()
list.files()
myPlot.R
source("myPlot.R")
ls()
myPlot(.7)
temp <- (y - beta * x) ^2
temp <- (y - .7 * x) ^2
?geom_abline
myPlot(.7)
source("myPlot.R")
myPlot(.7)
lm(I(child - mean(child))~ I(parent - mean(parent)) - 1, data = galton)
temp=lm(I(child - mean(child))~ I(parent - mean(parent)) - 1, data = galton)
temp$coefficients
coef(temp)
coef(temp)[1]
coef(temp)[2]
lm1 <- lm(galton$child ~ galton$parent)
lm1$coefficients
x <- c(0.18, -1.54, 0.42, 0.95)
rm(list <- ls())
rm(list = ls())
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
sum(w*(x-mean(x)))
w*(x-mean(x))
w*(x-.300)
sum(w*(x-.300))
sum(w*(x-1.077))
sum(w*(x-.0025))
sum(w*(x-.1471))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y ~ x -1)
?lm
lm(y, x, -1)
str(mtcars)
?mtcars
cof(lm(mpg ~ wt -1))
coef(lm(mpg ~ wt -1))
coef(lm(mpg ~ wt -1, data = mtcars))
lmmt <- lm(mpg ~ wt -1, data = mtcars)
coef(lmmt)
lmmt <- lm(mpg ~ wt -1, data = mtcars)[1]
lmmt <- lm(mpg ~ wt -1, data = mtcars)[2]
lmmt <- lm(mpg ~ wt -1, data = mtcars)
coef(lmmt)[1]
coef(lmmt)[2]
lmmt <- lm(mpg ~ wt, data = mtcars)
coef(lmmt)
lmmt <- lm(wt ~ mpg, data = mtcars)
coef(lmmt)
lmmt <- lm(mpg ~ wt, data = mtcars)
coef(lmmt)
1.5*.4
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
(x-mean(x))/sd(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
coef(lm(y ~ x))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
sum((x-.36)^2)
sum((x-.44)^2)
sum((x-.8)^2)
sum((x-.573)^2)
plot(diamond$carat, diamond$price,
xlab = "Mass (carats)",
ylab = "Price (SIN $)",
bg = "lightblue",
col = "black", cex = 1.1, pch = 21,frame = FALSE)
plot(diamond$carat, diamond$price,xlab = "Mass (carats)", ylab = "Price (SIN $)")
plot(diamond$carat, diamond$price,xlab = "Mass (carats)", ylab = "Price (SIN $)",
bg = "lightblue",col = "black",pch = 21,frame = FALSE)
plot(diamond$carat, diamond$price,xlab = "Mass (carats)", ylab = "Price (SIN $)",
+ bg = "lightblue",col = "black")
plot(diamond$carat, diamond$price,xlab = "Mass (carats)", ylab = "Price (SIN $)",
+ bg = "lightblue",col = "black")
plot(diamond$carat, diamond$price,xlab = "Mass (carats)", ylab = "Price (SIN $)",bg = "lightblue")
plot(diamond$carat, diamond$price,xlab = "Mass (carats)", ylab = "Price (SIN $)",bg = "lightblue", col="black")
?plot
?cex
plot(diamond$carat, diamond$price,
xlab = "Mass (carats)",
ylab = "Price (SIN $)",
bg = "lightblue",
col = "black", cex = 1.1, pch = 21)
plot(diamond$carat, diamond$price,
xlab = "Mass (carats)",
ylab = "Price (SIN $)",
bg = "lightblue",
col = "black", cex = 1.1, pch = 21,frame = FALSE)
plot(diamond$carat, diamond$price,
xlab = "Mass (carats)",
ylab = "Price (SIN $)",
bg = "lightblue",
col = "black", cex = 1.1, pch = 21)
plot(diamond$carat, diamond$price,
xlab = "Mass (carats)",
ylab = "Price (SIN $)",
bg = "lightblue",
col = "black", cex = 1.1, pch = 21,frame = FALSE)
points(diamond$carat, predict(fit), pch = 19, col = "red")
?lines
fit <- lm(price ~ carat, data = diamond)
points(diamond$carat, predict(fit), pch = 19, col = "red")
plot(diamond$carat, diamond$price,
xlab = "Mass (carats)",
ylab = "Price (SIN $)",
bg = "lightblue",
col = "black", cex = 1.1, pch = 21,frame = FALSE)
points(diamond$carat, predict(fit), pch = 19, col = "red")
lines(c(0.16, 0.16, 0.12),
c(200, coef(fit)[1] + coef(fit)[2] * 0.16,
coef(fit)[1] + coef(fit)[2] * 0.16))
lines(.20)
lines(c(0.27, 0.27, 0.12),
c(200, coef(fit)[1] + coef(fit)[2] * 0.27,
coef(fit)[1] + coef(fit)[2] * 0.27))
lines(.20,500)
?geom_point
library(UsingR)
data(diamond)
library(ggplot2)
g = ggplot(diamond, aes(x = carat, y = price))
g = g + xlab("Mass (carats)")
g = g + ylab("Price (SIN $)")
g
g = g + geom_smooth(method = "lm", colour = "black")
g
g = g + geom_point(size = 7, colour = "black", alpha=0.5)
g
g = g + geom_point(size = 7, colour = "black", alpha=0.1)
g
g = g + geom_point(size = 7, colour = "black", alpha=0.9)
g
g = g + geom_point(size = 7, colour = "black", alpha=0.5)
g
rm(g)
library(UsingR)
data(diamond)
library(ggplot2)
g = ggplot(diamond, aes(x = carat, y = price))
g = g + xlab("Mass (carats)")
g = g + ylab("Price (SIN $)")
g = g + geom_smooth(method = "lm", colour = "black")
g
g = g + geom_point(size = 7, colour = "black", alpha=0.5)
g
g = g + geom_point(size = 5, colour = "blue", alpha=0.2)
g
y <- diamond$price; x <- diamond$carat; n <- length(y)
fit <- lm(y ~ x)
e <- resid(fit)
yhat <- predict(fit)
max(abs(e -(y - yhat)))
max(abs(e - (y - coef(fit)[1] - coef(fit)[2] * x)))
plot(diamond$carat, diamond$price,
xlab = "Mass (carats)",
ylab = "Price (SIN $)",
bg = "lightblue",
col = "black", cex = 2, pch = 21,frame = FALSE)
abline(fit, lwd = 2)
for (i in 1 : n)
lines(c(x[i], x[i]), c(y[i], yhat[i]), col = "red" , lwd = 2)
e
y[1]
plot(x, e,
xlab = "Mass (carats)",
ylab = "Residuals (SIN $)",
bg = "lightblue",
col = "black", cex = 2, pch = 21,frame = FALSE)
abline(h = 0, lwd = 2)
for (i in 1 : n)
lines(c(x[i], x[i]), c(e[i], 0), col = "red" , lwd = 2)
diamond$e <- resid(lm(price ~ carat, data = diamond))
g = ggplot(diamond, aes(x = carat, y = e))
g = g + xlab("Mass (carats)")
g = g + ylab("Residual price (SIN $)")
g
g = g + geom_point(size = 7, colour = "black", alpha=0.5)
g
g = g + geom_hline(yintercept = 0, size = 2)
g
fit = factor(c(rep("Itc", nrow(diamond)),
rep("Itc, slope", nrow(diamond))))
head(fit)
?geom_dotplot
fit = factor(c(rep("Itc", nrow(diamond)),
rep("Itc, slope", nrow(diamond))))
g
rm(g)
g = ggplot(data.frame(e = e, fit = fit), aes(y = e, x = fit, fill = fit))
= c(resid(lm(price ~ 1, data = diamond)),
resid(lm(price ~ carat, data = diamond)))
= c(resid(lm(price ~ 1, data = diamond)),resid(lm(price ~ carat, data = diamond)))
e = c(resid(lm(price ~ 1, data = diamond)),resid(lm(price ~ carat, data = diamond)))
fit = factor(c(rep("Itc", nrow(diamond)),
rep("Itc, slope", nrow(diamond))))
g = ggplot(data.frame(e = e, fit = fit), aes(y = e, x = fit, fill = fit))
g
g+geom_point()
g + geom_dotplot(binaxis = "y", size = 2, stackdir = "center", binwidth = 20)
g + geom_dotplot(binaxis = "y", stackdir = "center", binwidth = 20)
newx = data.frame(x = seq(min(x), max(x), length = 100))
fit
fit <- lm(y ~ x);
fit
summary(fit)
newx = data.frame(x = seq(min(x), max(x), length = 100))
p1 = data.frame(predict(fit, newdata= newx,interval = ("confidence")))
p2 = data.frame(predict(fit, newdata = newx,interval = ("prediction")))
head(p1)
head(p2)
p1$interval = "confidence"
p2$interval = "prediction"
p1$x = newx$x
p2$x = newx$x
head(p2)
dat = rbind(p1, p2)
head(dat)
names(dat)[1]
g = ggplot(dat, aes(x = x, y = y))
g = g + geom_ribbon(aes(ymin = lwr, ymax = upr, fill = interval), alpha = 0.2)
g
g
g + geom_line()
?geom_ribbon
names(dat)[1]='y'
g = ggplot(dat, aes(x = x, y = y))
g = g + geom_ribbon(aes(ymin = lwr, ymax = upr, fill = interval), alpha = 0.2)
g
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
rm(list = ls())
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
lmd <- lm(y ~ x)
summary(lmd)
summary(fit)$coefficients
summary(lmd)$coef
?lm
lmmtcars <- lm(mtcars$mpg ~ mtcars$wt)
summary(lmtcars)
summary(lmmtcars)
lmmtcars$coefficients
summary(lmmtcars)$coefficients
coefcars <- summary(lmmtcars)$coefficients
coefcars[2,1] + c(-1,1)*qt(.975,df = lmmtcars$df) * coefcars[2,2]
?mtcars
View(mtcars)
?predict
predict(lmmtcars,newdata = data.frame(x = 3000), interval = "prediction")
a=data.frame(predict(lmmtcars,newdata = data.frame(x = 3000), interval = "prediction"))
a=data.frame(predict(lmmtcars,newdata = 3000, interval = "prediction"))
a=data.frame(predict(lmmtcars,newdata = data.frame(3000), interval = "prediction"))
y <- diamond$price; x <- diamond$carat; n <- length(y)
fit <- lm(y ~ x);
newx = data.frame(x = seq(min(x), max(x), length = 100))
p2 = data.frame(predict(fit, newdata = newx,interval = ("prediction")))
a=data.frame(predict(lmmtcars,newdata = data.frame(wt = 3.0), interval = "prediction"))
View(data.frame(wt = 3.0))
View(a)
newcar <- data.frame(wt = seq(min(mtcars$wt),max(mtcars$wt),length = 50)
)
View(newcar)
seq(1,2,10)
seq(1,2,length.out = 10)
?seq
seq(1,2,by=.1)
newcar <- data.frame(wt = seq(2,4,by=.05)
)
View(newcar)
p2 = data.frame(predict(fit, newdata = newcar,interval = ("prediction")))
newcar <- data.frame(wt = seq(2,4,by=.02)
)
p2 = data.frame(predict(fit, newdata = newcar,interval = ("prediction")))
newcar <- data.frame(x = seq(2,4,by=.02)
)
p2 = data.frame(predict(fit, newdata = newcar,interval = ("prediction")))
View(p2)
p1$x<-newcar$x
p2$x<-newcar$x
p2 = data.frame(predict(lmmtcars, newdata = newcar,interval = ("prediction")))
newcar <- data.frame(wt = seq(2,4,by=.02)
)
p2 = data.frame(predict(lmmtcars, newdata = newcar,interval = ("prediction")))
rm(list = ls())
x <- mtcars$wt
y <- mtcars$mpg
lmd <- ls(y ~ x)
lmd <- lm(y ~ x)
p1 <- data.frame(predict(lmd,newdata = data.frame(x=3.0),interval = ("prediction")))
p1
x <- x/2
lmd <- lm(y ~ x)
coefcars <- summary(lmd)$coef
summary(lmd)
summary(lmd)$coef
coefcars[2,1] + c(-1,1)*qt(.975,df = lmd$df) * coefcars[2,2]
yS <- predict(lmd)
lmdw <- lmd(y ~ 1)
lmdw <- lm(y ~ 1)
yws <- predict(lmdw)
sum((y-yS)^2)/sum((y-yws)^2)
swirl()
library(swirl)
bye
hi
?densit
?density
library(kernlab)
install.packages("kernlab")
library(kernlab)
head(spam)
data(spam)
str(spam)
View(spam)
dim(spam)
a=density(spamm$your[spam$type=="nonspam"])
a=density(spam$your[spam$type=="nonspam"])
a
summary(a)
b=spam$your[spam$type=="nonspam"]
plot(density(spam$your[spam$type=="nonspam"]),
col="blue",main="",xlab="Frequency of 'your'")
max(spam$your)
dim(spam)[1]
sample(dim(spam)[1],size = 10)
sample(dim(spam)[1],size = 10)
?sample
smallspam <- sample(dim(spam)[1],size = 10)
smallspam
smallspam
smallspam
smallspam <- spam[sample(dim(spam)[1],size = 10),]
smallspam$type=="spam"
smallspam$type=="spam"
(smallspam$type=="spam")*1+1
spamlabel <- (smallspam$type=="spam")*1+1
plot(smallspam$capitalAve)
smallspam$capitalAve
plot(smallspam$capitalAve, col=spamlabel)
install.packages(caret)
install.packages('caret')
library(caret)
library('caret')
install.packages("pbkrtest")
library('caret')
?install.packages
install.packages("C:/Users/agup105/Desktop/R/R/Caffos Latest Repo's/courses-master/08_PracticalMachineLearning/010caretPackage/pbkrtest_0.4-5.tar.gz", repos = NULL, type = "source")
install.packages("lme4")
install.packages("C:/Users/agup105/Desktop/R/R/Caffos Latest Repo's/courses-master/08_PracticalMachineLearning/010caretPackage/pbkrtest_0.4-5.tar.gz", repos = NULL, type = "source")
library(caret)
library(kernlab)
?createDataPartition
inTrain <- createDataPartition(y=spam$type,p=0.75,list = FALSE)
training <- spam[inTrain,]
testing <- spam[-inTrain,]
dim(testing)
set.seed(32343)
set.seed(32343)
?train
modelFit <- train(type ~.,data = training,method="glm")
install.packages("caret")
library(caret)
modelFit <- train(type ~.,data = training,method="glm")
